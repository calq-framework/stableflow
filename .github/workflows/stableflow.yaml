name: stableflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
    secrets:
      MAIN_NUGET_PAT:
        required: true
      CALQ_FRAMEWORK_NUGET_PAT:
        required: true

concurrency: stableflow

permissions:
  contents: write

jobs:
  stableflow:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: get called workflow ref
      id: workflows-ref
      run: |
        workflow_ref=${{ github.workflow_ref }}
        repository="${{ github.repository }}/"
        ref="@${{ github.ref }}"
        workflow_path=${workflow_ref#"$repository"}
        workflow_path=${workflow_path%"$ref"}
        called_workflow_ref=$(cat "$workflow_path" | grep 'uses: calq-framework/stableflow/.github/workflows/stableflow.yaml' | cut -d"@" -f2 | xargs)
        echo "CALLED_WORKFLOW_REF=$called_workflow_ref" >> $GITHUB_ENV
        echo "CALLED_WORKFLOW_REF: \"$called_workflow_ref\""
    - name: setup nuget config
      continue-on-error: true
      run: |
        dotnet nuget add source --username ${{ github.triggering_actor }} --password ${{ secrets.MAIN_NUGET_PAT }} --store-password-in-clear-text --name main "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json"
        dotnet nuget add source --username ${{ github.triggering_actor }} --password ${{ secrets.CALQ_FRAMEWORK_NUGET_PAT }} --store-password-in-clear-text --name calq-framework "https://nuget.pkg.github.com/calq-framework/index.json"
    - uses: actions/cache@v3
      with:
        path: ~/.dotnet/tools
        key: ${{ runner.os }}-dotnet-tools-${{ github.workflow_sha }}
        restore-keys: |
          ${{ runner.os }}-dotnet-tools-
    - name: install synver
      shell: bash
      run: |
        if [[ "${{ github.repository }}" != "calq-framework/synver" ]]; then
          dotnet tool update --global CalqFramework.Synver # TODO --version ${{ github.workflow_ref }}
        fi
    - name: install stableflow
      shell: bash
      run: |
        if [[ "${{ github.repository }}" != "calq-framework/stableflow" ]]; then
          echo "CALLED_WORKFLOW_REF: $CALLED_WORKFLOW_REF"
          version=""
          if [[ "$CALLED_WORKFLOW_REF" == "latest" ]]; then
            echo "latest"
            version='*'
          else
            echo "not latest"
            echo "CALLED_WORKFLOW_REF: \"$CALLED_WORKFLOW_REF\""
            version=$(echo "$CALLED_WORKFLOW_REF" \
              | grep -o 'v[0-9]*\.[0-9]*\.[0-9]*' \
              | grep -o '[0-9]*\.[0-9]*\.[0-9]*')
          fi
          echo "installing CalqFramework.Stableflow $version"
          dotnet tool update --global CalqFramework.Stableflow --version "$version"
        fi
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: self-install synver
      shell: bash
      run: |
        if [[ "${{ github.repository }}" == "calq-framework/synver" ]]; then
          dotnet tool uninstall --global CalqFramework.Synver || true
          dotnet pack -c Release --output .
          nupkg=$(find . -maxdepth 1 -type f -name "*.nupkg")
          version=$(echo "$nupkg" | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\)\.nupkg/\1/p')
          dotnet tool install --global --add-source . --version "$version" CalqFramework.Synver # doesn't use local source unless version is specified
        fi
    - name: self-install stableflow
      shell: bash
      run: |
        if [[ "${{ github.repository }}" == "calq-framework/stableflow" ]]; then
          dotnet tool uninstall --global CalqFramework.Stableflow || true
          dotnet pack -c Release --output .
          nupkg=$(find . -maxdepth 1 -type f -name "*.nupkg")
          version=$(echo "$nupkg" | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\)\.nupkg/\1/p')
          dotnet tool install --global --add-source . --version "$version" CalqFramework.Stableflow # doesn't use local source unless version is specified
        fi
    - name: stableflow
      shell: bash
      run: stableflow ${{ inputs.command }}
